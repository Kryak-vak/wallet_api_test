from typing import Any, Protocol
from uuid import UUID

from src.app.domain.entities import Operation, Wallet


class IWalletRepository(Protocol):
    async def create(self, create_entity: Wallet) -> Wallet: ...
    async def get(self, *, with_related: bool = True, **kwargs: Any) -> Wallet | None: ...
    async def filter(self, *, with_related: bool = True, **kwargs: Any) -> list[Wallet] | None: ...  # noqa: E501
    async def update(self, pk: UUID, update_entity: Wallet) -> Wallet: ...
    async def delete(self, pk: UUID) -> None: ...


class IOperationRepository(Protocol):
    async def create(self, create_entity: Operation) -> Operation: ...
    async def get(self, *, with_related: bool = True, **kwargs: Any) -> Operation | None: ...
    async def filter(
        self, *, with_related: bool = True, **kwargs: Any
    ) -> list[Operation] | None: ...  # noqa: E501
    async def delete(self, pk: UUID) -> None: ...
